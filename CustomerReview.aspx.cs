using System;
using System.Configuration;
using System.Data.SqlClient;
using System.Net;
using System.Net.Mail;
using System.Security.Authentication;
using System.Web.UI;

public partial class CustomerReview : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

    }

    protected void BtnSubmit_Click(object sender, EventArgs e)
    {
        int starRating = GetStarRating();

        if (starRating == 0)
        {
            // Display an error message or take appropriate action for missing star rating
            string errorMessage = "Please provide a star rating.";
            ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "alertMessage", "alert('" + errorMessage + "')", true);
            return;
        }

        if (txtInquiry.Text == "")
        {
            WebMsgBox.Show("Please add your Review");
            return;
        }

        string firstName = txtFirstName.Text;
        string lastName = txtLastName.Text;
        string email = txtEmail.Text;
        string contactNo = txtContactNo.Text;
        string country = ddlCountry.SelectedValue;
        string inquiry = txtInquiry.Text;

        string customerReviewId = GenerateCustomerReviewId();

        InsertDataIntoDatabase(customerReviewId, firstName, lastName, email, contactNo, country, inquiry, starRating);

        // Check if the reviewer has entered an email address
        if (!string.IsNullOrEmpty(email))
        {
            // Send a thank-you email
            SendThankYouEmail(email);
        }

        ClearInputFields();

        string submitMessage = "Customer Review submitted successfully!";
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "alertMessage", "alert('" + submitMessage + "')", true);
    }

    private void SendThankYouEmail(string recipientEmail)
    {
        int retries = 3; // Number of retries for sending the email
        bool emailSent = false;

        for (int i = 0; i < retries && !emailSent; i++)
        {
            try
            {
                // Set up Office 365 SMTP server details
                SmtpClient smtpClient = new SmtpClient("smtp.office365.com")
                {
                    Port = 587,
                    Credentials = new NetworkCredential("info@colombolotustower.lk", "Ops@lotus123"), 
                    EnableSsl = true,
                    Timeout = 10000 // Set timeout to 10 seconds (default is 100 milliseconds)
                };

                // Set TLS 1.2 explicitly
                ServicePointManager.SecurityProtocol = (SecurityProtocolType)3072;

                // thank-you email message
                MailMessage thankYouEmail = new MailMessage
                {
                    From = new MailAddress("info@colombolotustower.lk"),
                    Subject = "Thank You for Your Visit and Review!",
                    Body = "Thank you for visiting the Colombo Lotus Tower and for taking the time to submit your review. We appreciate your feedback and are delighted to hear about your experience.  <br /> Your insights are invaluable to us as we strive to enhance the experience for all our visitors.We look forward to welcoming you back to the Colombo Lotus Tower in the future. <br /> Thank you once again for your visit and your thoughtful review. <br /> This is an autogenerated email. <br /> Best regards, <br /> Colombo Lotus Tower Management Company (pvt) Ltd",
                    IsBodyHtml = true
                };

                // Set the recipient email address
                thankYouEmail.To.Add(recipientEmail);

                // Send the thank-you email
                smtpClient.Send(thankYouEmail);
                emailSent = true;
                Console.WriteLine("Thank you email sent successfully!");
            }
            catch (SmtpException smtpEx)
            {
                LogException(smtpEx);
                Console.WriteLine("Retry sending email attempt: " + (i + 1));
                System.Threading.Thread.Sleep(2000);
            }
            catch (Exception ex)
            {
                LogException(ex);
                Console.WriteLine("Error sending thank-you email: " + ex.Message);
            }
        }

        if (!emailSent)
        {
            Response.Write("Failed to send thank you email after " + retries + " retries.");
        }
    }

    private void LogException(Exception ex)
    {
        // Implement logging here, e.g., writing to a log file or database
        Console.WriteLine("Exception occurred: " + ex.ToString());
    }

    private string GenerateCustomerReviewId()
    {
        int nextId = GetNextCustomerIdFromDatabase();
        // Auto-generated format = CSR0001
        return "CSR" + (nextId + 1).ToString("D4");
    }

    private int GetNextCustomerIdFromDatabase()
    {
        string connectionString = ConfigurationManager.ConnectionStrings["ConString"].ConnectionString;

        string query = "SELECT ISNULL(MAX(CAST(SUBSTRING(CustomerReviewId, 4, LEN(CustomerReviewId) - 3) AS INT)), 0) FROM [VM].[dbo].[CustomerReviews]";

        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            using (SqlCommand command = new SqlCommand(query, connection))
            {
                connection.Open();
                return (int)command.ExecuteScalar();
            }
        }
    }

    private void InsertDataIntoDatabase(string customerId, string firstName, string lastName, string email, string contactNo, string country, string inquiry, int starRating)
    {
        string connectionString = ConfigurationManager.ConnectionStrings["ConString1"].ConnectionString;

        string query = "exec [VM].[lotusTest].[sp_InsertCustomerReviews] @FirstName, @LastName, @Email, @ContactNo, @Country, @Inquiry, @StarRating";
        //string query = "INSERT INTO [VM].[dbo].CustomerReviews (CustomerReviewId, FirstName, LastName, Email, ContactNo, Country, Inquiry, StarRating) " +
        //               "VALUES (@CustomerReviewId, @FirstName, @LastName, @Email, @ContactNo, @Country, @Inquiry, @StarRating)";

        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            using (SqlCommand command = new SqlCommand(query, connection))
            {
                command.Parameters.AddWithValue("@CustomerReviewId", customerId);
                command.Parameters.AddWithValue("@FirstName", firstName);
                command.Parameters.AddWithValue("@LastName", lastName);
                command.Parameters.AddWithValue("@Email", email);
                command.Parameters.AddWithValue("@ContactNo", contactNo);
                command.Parameters.AddWithValue("@Country", country);
                command.Parameters.AddWithValue("@Inquiry", inquiry);
                command.Parameters.AddWithValue("@StarRating", starRating);

                connection.Open();
                command.ExecuteNonQuery();
            }
        }
    }

    private int GetStarRating()
    {
        int selectedValue = 5;
        int.TryParse(hdnRating.Value, out selectedValue);
        return selectedValue;
    }

    private void ClearInputFields()
    {
        txtFirstName.Text = string.Empty;
        txtLastName.Text = string.Empty;
        txtEmail.Text = string.Empty;
        txtContactNo.Text = string.Empty;
        txtInquiry.Text = string.Empty;
        ddlCountry.SelectedIndex = 0;
        txtInquiry.Text = string.Empty;
    }
}